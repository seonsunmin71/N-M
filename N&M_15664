#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;

int n, m;
int arr[9] = { 0, };
bool visited[9] = { 0, };
vector <int> seq; // 배열의 크기를 자유롭게 조절할 수 있는 seq배열 선언

void dfs(int num,int cnt) {
	if (cnt == m) {
		for (int i = 0; i < seq.size(); i++) { // seq.size()로 유동적인 크기를 입력받는다. 
			cout << seq[i] << ' ';
		}
		cout << "\n";
		return;
	}
	
	bool used[1001] = { 0, }; // arr배열 값을 검사하는 배열을 지역변수로 선언
	for (int j = num; j < n; j++) {
		if (!visited[j] && !used[arr[j]]) {//인덱스와 값을 검사하는 조건문  
			visited[j] = true;
			used[arr[j]] = true;
			seq.push_back(arr[j]); // seq배열 뒤에 값 추가 
			dfs(j+1,cnt + 1); // 작거나 같은 값들은 제외하고 출력하기 위해서 
			seq.pop_back(); // 추가했던 값 빼주기 
			visited[j] = false;

		}
	}
}

int main() {
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		cin >> arr[i];
	}
	sort(arr, arr + n);
	dfs(0,0);
}
